openapi: "3.1.0"
info:
  title: "TODO 앱 간단 API"
  version: "1.0.0"
  description: "PRD 및 UI 스펙을 기반으로 한 간단한 TODO API 스펙입니다. 인증은 제거되었으며, 요청자는 `x-user-id` 헤더로 식별됩니다. 모든 설명은 한국어로 제공됩니다."
servers:
  - url: "http://localhost:8000"
    description: "로컬 개발 서버"

components:
  parameters:
    XUserId:
      name: x-user-id
      in: header
      description: "요청을 보낸 사용자의 id(예: 이메일). 인증은 없으며 이 헤더로 사용자 식별을 수행합니다. 일부 엔드포인트에서는 필수입니다."
      required: true
      schema:
        type: string

  schemas:
    UserCreate:
      type: object
      description: "사용자 생성 시 요청 바디"
      required: [id, password]
      properties:
        id:
          type: string
          description: "사용자 고유 ID (예: 이메일). 이 값을 users.id로 사용합니다."
        password:
          type: string
          description: "비밀번호(간단 구현용). 프로덕션에서는 해시 저장 권장."
        display_name:
          type: string
          nullable: true
          description: "선택적 표시명"

    User:
      type: object
      description: "사용자 리소스"
      properties:
        id:
          type: string
        display_name:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time

    TodoCreate:
      type: object
      description: "새로운 TODO 생성 요청"
      required: [text]
      properties:
        text:
          type: string
          description: "할 일 내용"
        position:
          type: integer
          nullable: true
          description: "목록 내 정렬 순서(선택)"

    TodoUpdate:
      type: object
      description: "TODO 항목 수정 요청(부분 업데이트 허용)"
      properties:
        text:
          type: string
        done:
          type: boolean
        position:
          type: integer

    Todo:
      type: object
      description: "TODO 리소스"
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
        text:
          type: string
        done:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          nullable: true
        position:
          type: integer
          nullable: true

    Error:
      type: object
      properties:
        message:
          type: string

paths:
  /users:
    post:
      summary: "사용자 생성"
      description: "새 사용자를 생성합니다. `id`는 PK로 사용됩니다. 로그인/인증은 구현하지 않습니다."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: "사용자 생성 성공"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: "잘못된 요청"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}:
    get:
      summary: "사용자 조회"
      description: "특정 사용자 정보를 조회합니다. 공개 정보만 반환합니다."
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "사용자 정보 반환"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: "사용자 없음"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /todos:
    get:
      summary: "현재 사용자 TODO 목록 조회"
      description: "헤더 `x-user-id`에 명시된 사용자의 모든 TODO를 반환합니다. 쿼리 파라미터로 필터/정렬 추가 가능(간단 구현에는 미포함)."
      parameters:
        - $ref: '#/components/parameters/XUserId'
      responses:
        '200':
          description: "TODO 배열 반환"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
        '400':
          description: "잘못된 요청(헤더 누락 등)"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: "새 TODO 생성"
      description: "헤더 `x-user-id`로 식별되는 사용자 소유의 새 TODO를 생성합니다."
      parameters:
        - $ref: '#/components/parameters/XUserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoCreate'
      responses:
        '201':
          description: "생성된 TODO 반환"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: "잘못된 요청"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /todos/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string

    get:
      summary: "단일 TODO 조회"
      description: "`x-user-id` 헤더를 사용하여 소유자 확인 후 해당 TODO를 반환합니다."
      parameters:
        - $ref: '#/components/parameters/XUserId'
      responses:
        '200':
          description: "TODO 반환"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '403':
          description: "소유자 불일치 또는 접근 금지"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: "TODO 없음"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      summary: "TODO 부분 수정"
      description: "텍스트, done, position 등의 부분 수정 가능. `x-user-id`로 소유자 확인 후 적용합니다."
      parameters:
        - $ref: '#/components/parameters/XUserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoUpdate'
      responses:
        '200':
          description: "수정된 TODO 반환"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: "잘못된 요청"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: "소유자 불일치"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: "TODO 없음"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: "TODO 삭제"
      description: "헤더 `x-user-id`로 소유자 확인 후 TODO를 삭제합니다. 성공 시 204 반환."
      parameters:
        - $ref: '#/components/parameters/XUserId'
      responses:
        '204':
          description: "삭제 성공(응답 바디 없음)"
        '403':
          description: "소유자 불일치"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: "TODO 없음"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

security: []
